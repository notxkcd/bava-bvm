Cognizant L1 interview question:
--------------------------------
Tell me about yourself.
Tellme about your framework.
Write down framework structure
What is sceanerio and scenario ouline?
Write selenium code for one textbox to pass data as hello and drop-down list select first element and click the submit button.
Write program for list in java to add some list and remove first one.
Where you have used collection in framework?
What is hashmap?
Write API post code for restassured.
How to run the testcase order wise in testng?
How to handling dynamic webelement in selenium?
What are the exception you have faced in selenium?
How to configure ci/cd in Jenkins?

--------------------------------------------------------
Expleo L1 interview questions:
-----------------------------
Tell me about your self
How to do pdf file automation and write methods;for that?
How to pass file in selenium without using send keys?
Write java program for 
Input: Good hi hi
Output: good hi
Input: Good Girl
Output: dooG lriG
User name and password text box there in on web page. DOM not worked how will you pass the data to both text box.
Write xpath for below scenario
There are 4 text boxes are there like username,password,age,date only attribute and value  for password text box only remaining three text boxes there is div tag only write xpath for all 4 text boxes.
----------------------------------------------
1.Dynamic web table scenario 
2.Data provider 
3.Star program -Java
4.StaleElementReference and ElementNotInteractable Exception 
5.Contains Xpath
Round 1:
Introduce yourself
What is cucumber frame work
What is POM. 
How much rating you will give for Java.
What is abstraction.
What is static.
Reverse the string.
 
Round2:
Introduce yourself 
Explain about your role in frame work.
What is feature file
Difference between junit and testng
Write the syntax to launch browser.
What is setproperty.
What is webdriver.
Write the syntax for filereader.
How you start your day.
How you start your third day.
----------------------------------------------
1.Introduce yourself 
2.Explain your project 
3.Go to amazon and take xpath for particular element
4.write a code for screenshots
5.what attribute are we used to Connect Feature file and step definition 
6.difference b/w @before and background 
7.Explain hook
8.how to switch windows code
9.write excel reader code. 
10.write program to count An each character in string
11.in a testng,Have 2 classes how to select 3methods from one class and 2methods from other class
12.write the automation code for api
13.in the cucumber,how to execute particular scenarios 
14.how to make reusable steps in the scenario
--------------------------------------------------
Scenario Questions:
============

Agile:
====
Challenges faced in your experience and which agile meeting you shared it and how it improved?
Scenario question: you have started working in Agile method, in between you need some requirements what will you do?
What is your contribution in RTM?

Selenium:
======
Do we need to take screenshots for all issues?
In your project where you have maintain your screenshot code, from where it is called?

 When chromedriver updates frequently & throws IO exception how you handle it?
 How do you handle version issues, What approach you will handle to resolve?
 How will you handle the popup window ? Other then getWindow handle ?
 Have you used an interface in your framework other than selenium interfaces?
 How many ways we can upload a file through Selenium ,  if button tag What will be the way
 How to check if element is enabled if Selenium enabled method is not working
 How to handle the webpage Which takes more time to load?
 Object repository in selenium 
 Rating about yourself in Java,Selenium
 Selenium artifacts
 Webdriver verification methods
 What are the oops concepts in Java And What are the areas it is implemented in selenium
 Where you applied the overloading and overriding methods in Selenium?
 What is the common locator using in your project
 What is the difference between Selenium 3 and Selenium  4
 What is the direct method for file uploading in selenium 
 While taking common XPath if any changes in Dom structure in future how will you handle?

Link: selectorshubcom/xpath-practice-page/ "Scenerio Based Question : If you are copy from correct username and password from notepad and -paste it into login fields and click submit it alerts ""username or password is wrong"" why?"

=========

What is the testing strategy you were used in your project

What is the testing plan you have used in your project

How will you link test case and bug in Jira?

How many test cases failed while running test scripts in your project
How many defects found while running test scripts in your project
What are all the manual testing you done?
when u will do smoke testing
Do you know non functional testing
what are non-functional testing you cover
how to do priority in regression testing
How you will rate yourself in manual testing 
how worked with UAT test and who is your stackholders
how to handle the defect in dropdown

How to verify their is no testing is needed any more

What do you do if its a project doesnt have a scope of automation testing can you board-on with them?

You have Many Link Test in webpage and if u click one it will open new webpage and you need to find the element in that new webpage, how you can achive that?

If you have 10 Methods in Interface, and you are implementing the all methods except one, what will happen to the execution? Whether it will run or not. 

For Example: If you have two appliction, 1st application for payment posting and 2nd is for Validting the payments? How will you configure the URL for both Test Scenarios?

How many FeatureFile and StepDefinistion files can be created for if you have two applications?

Explain about various modules in Cucumber Framework 

Can we create new runner class or page factory for each time?

Can we raise the bug or contact developer directly?

One page changed by developer what exception will throw?

What challenges faced in framework

I'm having 2classes A and B, I want to access all the methods of Class A in Class B. Explain How?

Inheritance concept used in project and explain?

Scenario-Once launch the browser before login,there will be a popup/alert receive.How you will handle that and login in your project

There are many frameworks but why your company prefer to use testng , cucumber in your projects

Other than Dependencies what are all there in pom.xml file?
maven surefire plugin compiler plugin

How you are mentioning your test data.

How do you use external data.

Which one consumes more time to write test case? If cucumber then why we using cucumber?
------------------------------------------------------
General Concepts:
What is API testing? How is it different from other forms of testing (UI testing, Unit testing)?
Can you explain the difference between SOAP and REST APIs?
What are some key factors to consider when testing an API?
What is the difference between synchronous and asynchronous API calls?
What are the main components of an HTTP request and response?
What are status codes in API responses? Can you name some common ones and explain their meanings (e.g., 200, 401, 404, 500)?
Explain idempotency in APIs. Why is it important?
What is API versioning? How would you test it?
What are the common authentication mechanisms used in APIs (e.g., OAuth, API Keys, JWT)?
Testing Techniques & Practices:
How do you approach testing RESTful APIs?
What tools have you used for API testing (e.g., Postman, SoapUI, JMeter, RestAssured)?
What are the different types of API tests (e.g., functional, performance, security, integration)?
How do you validate response data when testing an API?
How do you handle testing APIs when dependent services are down or unavailable?
What is mocking in API testing? How have you used it?
Can you describe how you would automate API testing? What tools or frameworks have you used for automation?
What is contract testing? How do you implement it in API testing?
How would you handle pagination in API testing?
How do you test error handling and edge cases in API testing?
Advanced API Testing:
How do you test the performance of an API? What metrics do you consider?
What is rate limiting? How would you test for it?
How do you test API security? What kind of vulnerabilities would you check for?
Explain how you would test for concurrency in an API.
What is throttling? How would you test APIs for throttling mechanisms?
How do you test APIs with dynamic responses or with different states (like shopping cart or order processing)?
Real-world Scenario-based Questions:
If an API returns a 500 status code, how would you troubleshoot the issue?
How do you test backward compatibility in APIs?
Describe a challenging API testing issue you’ve faced and how you resolved it.
You’re testing an API for an online banking system. What are the key test cases you would write?
How would you test an API that integrates with third-party services?
How do you ensure the accuracy and reliability of data when multiple services are interacting with each other through APIs?
How would you handle continuous API testing in a CI/CD pipeline?
Behavior and Methodology:
How do you prioritize API test cases in a large, complex system?
What is the role of API testing in Agile and DevOps environments?
How do you collaborate with developers and other stakeholders during API testing?
How do you deal with incomplete or unclear API documentation?
Miscellaneous Questions:
How do you test WebSockets or gRPC APIs?
What is the role of schema validation in API testing?
Can you explain HATEOAS and how it relates to REST APIs?
What tools or techniques do you use to ensure data privacy and compliance (e.g., GDPR) when testing APIs?
Hands-On or Practical Questions:
You are given a simple API endpoint, can you demonstrate how you would test it using Postman or any tool of your choice?
Here’s a sample API request and response. Write test cases for it.
You have an API that’s integrated with a third-party service, but the third-party is currently down. How do you proceed with testing?
-------------------------------------------------
Explain about your project
What is POM. How will you use in your project
Elements not available in DOM. How will you handle
Explain find elements and find element
Explain windowhandle and windowhandles
What are the exception handled in your project
Explain waits
Reverse the string program
Program to find second largest number
Wite the SQL query
How will you push the code in Git
Explain CI/CD
How will you store the report in your project
How will you pass the data from Excel
--------------------------------------------------
Capgemini questions: Explain about your project.
How will you handle the exception?
What are the tools you have used in your project?
Can we use multiple catch in Java?
If you can use 3 catch blocks, how will you declare the hierarchy?
Apart from try and catch, how will you handle exceptions in Java?
Do you know what Agile is?
What is a story in Agile?
How do you allocate story points?
What is product backlog and sprint backlog?
How do you run multiple test cases in TestNG?
How do you run failed test cases again in Cucumber?
What is a tag in Cucumber? Explain.
Explain Hook class in Cucumber.
How many @After and @Before classes can we use in Cucumber?
How do you run multiple test cases in Cucumber?
What is stash in GitHub?
Write a code to find out the number of alphabets in a sentence.
Elements are dynamically changing. Please write XPath given  table.

-------------------------------------------------------------
 Commonly Used XPath Axes
ancestor: Selects all ancestors (parent, grandparent, etc.) of the current node.

Example: //div[@id='example']//span/ancestor::div
ancestor-or-self: Selects all ancestors and the current node itself.

Example: //span/ancestor-or-self::div
attribute: Selects all attributes of the current node (not commonly used for element selection).

Example: //input/@type
child: Selects all children of the current node.

Example: //div[@id='example']/child::span
descendant: Selects all descendants (children, grandchildren, etc.) of the current node.

Example: //div[@id='example']/descendant::span
descendant-or-self: Selects all descendants and the current node itself.

Example: //div[@id='example']/descendant-or-self::span
following: Selects all nodes in the document that follow the current node.

Example: //h1/following::p
following-sibling: Selects all siblings after the current node.

Example: //h2/following-sibling::h2
parent: Selects the parent of the current node.

Example: //span/parent::div
preceding: Selects all nodes that come before the current node in the document.

Example: //p/preceding::h1
preceding-sibling: Selects all siblings before the current node.

Example: //h2/preceding-sibling::h2
self: Selects the current node itself.

Example: //div[@id='example']/self::div
[8:58 am, 9/10/2024] Jalal Bro AiiTE Academy: 1. Tell about Yourself.
Answer according to your profile and experience.

2. Automation experience in your project
3. What is Xpath? and Write Xpath for given scenario. [Navigate upwards]
XPath known as the XML path is a language that helps to query the XML documents. It consists of expression for a path along with certain conditions to locate a particular element.

4. Write xpath of two text boxes which don’t have any locators to find.
5. How to select value from Dropdown?
Syntax of select value from dropdown

 Select dropdown = new Select(driver.findElement(By.id(&#8220;identifier&#8221;)));
6. What are the Waits in selenium and explain briefly. Write code of each. [ImplicitlyWait, Sleep, WebdriverWait]

    
   Implicit wait:
    package credo;
    import java.util.concurrent.TimeUnit;
    import org.openqa.selenium.By;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.chrome.ChromeDriver;
    import org.testng.annotations.Test;
    public class AppTest {
        
        protected WebDriver driver;
        @Test
        public void credosystemz() throws InterruptedException 
        {
        System.setProperty (webdriver.chrome.driver.\\chromedriver.exe);
        driver = new ChromeDriver(); 
        driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS) ;
        String eTitle = credosystemz;
        String aTitle =  ;
        // launch Chrome and redirect it to the Base URL
        driver.get(https://www.credosystemz.com/ );
        //Maximizes the browser window
        driver.manage().window().maximize() ;
        //get the actual value of the title
        aTitle = driver.getTitle();
        //compare the actual title with the expected title
        if (aTitle.equals(eTitle))
        {
        System.out.println(Test Passed) ;
        }
        else {
        System.out.println( Test Failed );
        }
        //close browser
        driver.close();
    }
    }
    Explicit code:
    package credo;
    import java.util.concurrent.TimeUnit;
    import org.openqa.selenium.By;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.WebElement;
    import org.openqa.selenium.chrome.ChromeDriver;
    import org.openqa.selenium.support.ui.ExpectedConditions;
    import org.openqa.selenium.support.ui.WebDriverWait;
    import org.testng.annotations.Test;
    
    public class AppTest2 {
        protected WebDriver driver;
        @Test
        public void credosystemz() throws InterruptedException 
        {
        System.setProperty (webdriver.chrome.driver.\\chromedriver.);
        driver = new ChromeDriver(); 
        WebDriverWait wait=new WebDriverWait(driver, 20);
        String eTitle = Credo ;
        String aTitle =  ;
        // launch Chrome and redirect it to the Base URL
        driver.get(https://www.credosystemz.com/; );
        //Maximizes the browser window
        driver.manage().window().maximize() ;
        //get the actual value of the title
        aTitle = driver.getTitle();
        //compare the actual title with the expected title
        if (aTitle.contentEquals(eTitle))
        {
        System.out.println( Test Passed) ;
        }
        else {
        System.out.println( Test Failed);
        }
        WebElement credolink;
        credolink= wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(/html/body/div[1]/section/div[2]/div/div[1]/div/div[1]/div/div/div/div[2]/div[2]/div/div/div/div/div[1]/div/div/a/i8221;)));
        credolink.click();
        }
        
    }
    Sleep
    
    import java.util.concurrent.TimeUnit;
     
    import org.openqa.selenium.Alert;
     
    import org.openqa.selenium.By;
     
    import org.openqa.selenium.WebDriver;
     
    import org.openqa.selenium.firefox.FirefoxDriver;
     
    import org.openqa.selenium.support.ui.ExpectedConditions;
     
    import org.openqa.selenium.support.ui.WebDriverWait;
     
    public class PracticeWaitCommands {
     
     public static WebDriver driver;
     
     public static void main(String[] args) {
     
     // Create a new instance of the Firefox driver
     
            driver = new FirefoxDriver();
     
            // Put an Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
     
            driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
     
            // Launch the URL
     
            driver.get(https://toolsqa.com/automation-practice-switch-windows/);
     
            // Click on the Button ;Timing Alert;
     
            driver.findElement(By.name(Timing Alert)).click();
     
            System.out.println(Timer JavaScript Alert is triggered but it is not yet opened);
     
            // Create new WebDriver wait
     
            WebDriverWait wait = new WebDriverWait(driver, 10);
     
            // Wait for Alert to be present
     
            Alert myAlert = wait.until(ExpectedConditions.alertIsPresent());
     
            System.out.println(Either Pop Up is displayed or it is Timed Out);
     
            // Accept the Alert
     
            myAlert.accept();
     
            System.out.println(Alert Accepted);
     
            // Close the main window
     
            driver.close();
     
     }Implicit wait:
    package credo;
    import java.util.concurrent.TimeUnit;
    import org.openqa.selenium.By;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.chrome.ChromeDriver;
    import org.testng.annotations.Test;
    public class AppTest {
        
        protected WebDriver driver;
        @Test
        public void credosystemz() throws InterruptedException 
        {
        System.setProperty (webdriver.chrome.driver.\\chromedriver.exe);
        driver = new ChromeDriver(); 
        driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS) ;
        String eTitle = credosystemz;
        String aTitle =  ;
        // launch Chrome and redirect it to the Base URL
        driver.get(https://www.credosystemz.com/ );
        //Maximizes the browser window
        driver.manage().window().maximize() ;
        //get the actual value of the title
        aTitle = driver.getTitle();
        //compare the actual title with the expected title
        if (aTitle.equals(eTitle))
        {
        System.out.println(Test Passed) ;
        }
        else {
        System.out.println( Test Failed );
        }
        //close browser
        driver.close();
    }
    }
    Explicit code:
    package credo;
    import java.util.concurrent.TimeUnit;
    import org.openqa.selenium.By;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.WebElement;
    import org.openqa.selenium.chrome.ChromeDriver;
    import org.openqa.selenium.support.ui.ExpectedConditions;
    import org.openqa.selenium.support.ui.WebDriverWait;
    import org.testng.annotations.Test;
    
    public class AppTest2 {
        protected WebDriver driver;
        @Test
        public void credosystemz() throws InterruptedException 
        {
        System.setProperty (webdriver.chrome.driver.\\chromedriver.);
        driver = new ChromeDriver(); 
        WebDriverWait wait=new WebDriverWait(driver, 20);
        String eTitle = Credo ;
        String aTitle =  ;
        // launch Chrome and redirect it to the Base URL
        driver.get(https://www.credosystemz.com/; );
        //Maximizes the browser window
        driver.manage().window().maximize() ;
        //get the actual value of the title
        aTitle = driver.getTitle();
        //compare the actual title with the expected title
        if (aTitle.contentEquals(eTitle))
        {
        System.out.println( Test Passed) ;
        }
        else {
        System.out.println( Test Failed);
        }
        WebElement credolink;
        credolink= wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(/html/body/div[1]/section/div[2]/div/div[1]/div/div[1]/div/div/div/div[2]/div[2]/div/div/div/div/div[1]/div/div/a/i;)));
        credolink.click();
        }
        
    }
    Sleep
    
    import java.util.concurrent.TimeUnit;
     
    import org.openqa.selenium.Alert;
     
    import org.openqa.selenium.By;
     
    import org.openqa.selenium.WebDriver;
     
    import org.openqa.selenium.firefox.FirefoxDriver;
     
    import org.openqa.selenium.support.ui.ExpectedConditions;
     
    import org.openqa.selenium.support.ui.WebDriverWait;
     
    public class PracticeWaitCommands {
     
     public static WebDriver driver;
     
     public static void main(String[] args) {
     
     // Create a new instance of the Firefox driver
     
            driver = new FirefoxDriver();
     
            // Put an Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
     
            driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
     
            // Launch the URL
     
            driver.get(https://toolsqa.com/automation-practice-switch-windows/);
     
            // Click on the Button &#8220;Timing Alert&#8221;
     
            driver.findElement(By.name(Timing Alert)).click();
     
            System.out.println(Timer JavaScript Alert is triggered but it is not yet opened);
     
            // Create new WebDriver wait
     
            WebDriverWait wait = new WebDriverWait(driver, 10);
     
            // Wait for Alert to be present
     
            Alert myAlert = wait.until(ExpectedConditions.alertIsPresent());
     
            System.out.println(Either Pop Up is displayed or it is Timed Out);
     
            // Accept the Alert
     
            myAlert.accept();
     
            System.out.println(Alert Accepted);
     
            // Close the main window
     
            driver.close();
     
     }
    
Need to Switch your career to automation: Click Here
7. Exception Handling. Write code for given scenario.

 lass Main {
      public static void main(String[] args) {
    
        try {
    
          // code that generate exception
          int divideByZero = 5 / 0;
          System.out.println(Rest of code in try block);
        }
        
        catch (ArithmeticException e) {
          System.out.println(ArithmeticException =>+ e.getMessage());
        }
      }
    }
    Output
    
    Arithmetic Exception ; / by zero    
8. Use “Throws” keyword.

    public class TestThrow1{  
       static void validate(int age){  
         if(age<18)  
          throw new ArithmeticException("not valid");  
         else  
          System.out.println("welcome to vote");  
       }  
       public static void main(String args[]){  
          validate(13);  
          System.out.println("rest of the code...");  
      }  
    }  
    
    
9. Use of “Finally” keyword

    try {
      int[] myNumbers = {1, 2, 3};
      System.out.println(myNumbers[10]);
    } catch (Exception e) {
      System.out.println(Something went wrong.);
    } finally {
      System.out.println(The try catch is finished.);
    }
    
10. Diff – ‘Final’ & ‘finally’
Final	Finally
Final is used to apply restrictions on class, method and variable.	Finally is used to place important code, it will be executed whether exception is handled or not.
11. Diff – ‘List’ & ‘Set’
List	Set
The list implementation allows us to add the same or duplicate elements.	The set implementation doesn’t allow us to add the same or duplicate elements.
The List implementation classes are LinkedList and ArrayList.	The Set implementation classes are TreeSet, HashSet and LinkedHashSet.
12. Diff – ‘Abstract Class’ & ‘Interface’ with Code

    // Abstract class
    abstract class Animal {
      // Abstract method (does not have a body)
      public abstract void animalSound();
      // Regular method
      public void sleep() {
        System.out.println(;Zzz;);
      }
    }
    
    // Subclass (inherit from Animal)
    class Pig extends Animal {
      public void animalSound() {
        // The body of animalSound() is provided here
        System.out.println(;The pig says: wee wee;);
      }
    }
    
    class Main {
      public static void main(String[] args) {
        Pig myPig = new Pig(); // Create a Pig object
        myPig.animalSound();
        myPig.sleep();
      }
    }
    //interface
    interface printable{  
    void print();  
    }  
    class A6 implements printable{  
    public void print(){System.out.println(;Hello;);}  
      
    public static void main(String args[]){  
    A6 obj = new A6();  
    obj.print();  
     }  
    }
     
13. POM
POM means Page Object Model. To simplify, in the Page Object Model framework, we create a class file for each web page. This class file consists of different web elements present on the web page.

14.Page Factory
Selenium Page Factory Pattern is like an extension to Page Object Model , but Page Factory is much enhanced model. In Page Factory, Annotations are used to give descriptive names for WebElements to improve code readability. And annotation @FindBy is used to identify Web Elements in the page.

15. Did you develop any Framework?
16. How to take screenshot – Code?

    
        import org.openqa.selenium.OutputType;
    import org.openqa.selenium.TakesScreenshot;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.chrome.ChromeDriver;
     
    import java.io.File;
    import java.io.IOException;
     
    public class ScreenshotDemo {
        public static void main(String[] args) {
            //set the location of chrome browser
            System.setProperty(webdriver.chrome.driverC:\\chromedriver.exe);
            
            // Initialize browser
            WebDriver driver = new ChromeDriver();
            
            //navigate to url
            driver.get(https://demoqa.com&#038;);
            
           //Take the screenshot
            File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            
            //Copy the file to a location and use try catch block to handle exception
            try {
                FileUtils.copyFile(screenshot, new File(C:\\projectScreenshots\\homePageScreenshot.png));
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
            
            //closing the webdriver
            driver.close();
        }
    }
    
17. Real time experience in BUILD tool [Apache Ant or Maven]
18. Version Controlling

    18.	Version Controlling
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.45.0</version>
        </dependency>
    </dependencies>
    
    
19. Member access modifiers
The access modifiers in java specifies accessibility (scope) of a data member, method, constructor or class. These are the Java keywords, which are used in declaring variables, method, constructor or class. These modifiers help to set the level of access of the data or it decides the scope of the data.

20. Diff – ‘Array’ & ‘ArrayList’
Array	ArrayList
The array is a native programming component or a data structure.	ArrayList is a class from the Java Collections framework, an API. In fact, ArrayList is internally implemented using an array in Java.
Is a simple fixed-size data structure which requires a size at the time of creation.	Is a dynamic sized data structure which doesn’t require a specific size at the time of initialization
21. How to Sort using ‘Collection
For example: public static void sort(List myList) myList : A List type object we want to sort. This method doesn’t return anything

Round 2:
22. What kind of framework you have worked? Explain it?
Below are the types of framework:

Linear Automation Framework
Modular Based Testing Framework
Library Architecture Testing Framework
Data-Driven Framework
Keyword-Driven Framework
Hybrid Testing Framework
23. Write xpath to locate the div that has no tags?
24. How will you run Smoke test cases seperately?
Free PDF : Get our updated Selenium Course Content pdfDownload Now
25. Explain about static and final key words?
Static keywords	Final Keywords
Static variable belongs to a class not to a object	The final keyword in java is used to restrict the user. The java final keyword can be used in many context.
26. Explain about interface and abstract class? Why interface than abstract class?
Interface can have only abstract methods. Since Java 8, it can have default and static methods also. Abstract class can have abstract and non-abstract methods. Interfaces cannot be instantiated, though abstract classes that implement interfaces can.

27. Do you know collections in java?
The Java collections framework provides a set of interfaces and classes to implement various data structures and algorithms. For example, the LinkedList class of the collections framework provides the implementation of the doubly-linked list data structure.

28. Write a program to loop through Arraylist?

     
    import java.util.*;
    public class LoopExample {
       public static void main(String[] args) {
    
          ArrayList<Integer> arrlist = new ArrayList<Integer>();
          arrlist.add(14);
          arrlist.add(7);
          arrlist.add(39);
          arrlist.add(40);
    
          /* For Loop for iterating ArrayList */
          System.out.println(For Loop);
          for (int counter = 0; counter <xmp arrlist.size(); counter++) { 		      
              System.out.println(arrlist.get(counter)); 		
          }   		
    
          /* Advanced For Loop*/ 		
          System.out.println("Advanced For Loop"); 		
          for (Integer num : arrlist) { 		      
               System.out.println(num); 		
          }
    
          /* While Loop for iterating ArrayList*/ 		
          System.out.println("While Loop"); 		
          int count = 0; 		
          while (arrlist.size() > count) {
         System.out.println(arrlist.get(count));
             count++;
          }
    
          /Looping Array List using Iterator/
          System.out.println(Iterator);
          Iterator iter = arrlist.iterator();
          while (iter.hasNext()) {
             System.out.println(iter.next());
          }
       }
    }
    
     
29. “09/24/2015”. seperate numbers only from this string.
30. What is the difference between Commit and Push in Github?
Git considers its data more like a set of snapshots, like a mini file system or versions of a project called commits. Each developer has their own private repository to track their changes in. When you use the push command, you apply your changes to the upstream repository.

31. Writer a program to keep current browser but close other browsers?
32. There are three webelements having same property. Write a program to go to third one?
33. How will you push your code to server in github?
34. Brief about your automation testing experience?
35. What is protected access modifier?
Classes in java can use only public and default access modifiers. On the other hand, class visibility takes precedence over member visibility. If member is using public access modifier but class is default. Variable will not be accessible from outside package.

36. Do you know Page object model framework and Pagefactory?
Page Object Model, also known as POM, is a design pattern in Selenium that creates an object repository for storing all web elements. It is useful in reducing code duplication and improves test case maintenance. Page Factory in Selenium is an inbuilt extension of Page Object Model. It is optimized. It is a class where Three two methods in it,

@FindBy annotation – to find WebElement

initElementts() method – to initialize web elements automatically.

37. Write script to drag drop a text box?*9

    import org.openqa.selenium.By;		
    import org.openqa.selenium.WebDriver;		
    import org.openqa.selenium.WebElement;		
    import org.openqa.selenium.chrome.ChromeDriver;		
    import org.openqa.selenium.interactions.Actions;		
    import org.testng.annotations.Test;		
    public class DragAndDrop {			
    WebDriver driver;			
    @Test		
        public void DragnDrop()					
        {		
             System.setProperty(webdriver.chrome.driver E://Selenium//Selenium_Jars//chromedriver.exe );					
             driver= new ChromeDriver();					
             driver.get(http://demo.guru99.com/test/drag_drop.html);					
             
            //Element which needs to drag.    		
                WebElement From=driver.findElement(By.xpath(//*[@id=credit2]/a));	
             
             //Element on which need to drop.		
             WebElement To=driver.findElement(By.xpath(//*[@id=bank]/li));					
                     
             //Using Action class for drag and drop.		
             Actions act=new Actions(driver);					
    
        //Dragged and dropped.		
             act.dragAndDrop(From, To).build().perform();		
        }		
    }
    
     
Round 3:
38. Write a program to find occurrence of every characters in following string:String s = ‘Welcome to Wipro”;
39. Have you worked on Page object model framework?
For example, If you are worked in Page object model framework, then explain its with your projects. Page Object Model is a way of representing an application in a test framework.

40. Implicit and explicit wait. difference?
Implicit wait	Explicit wait
The implicit wait will tell to the web driver to wait for a certain amount of time before it throws a “No Such Element Exception”.	The explicit wait is an intelligent kind of wait, but it can be applied only for specified elements. The explicit wait gives better options than that of an implicit wait as it will wait for dynamically loaded Ajax elements.
41. Thread.sleep and Thread.wait. difference?
Thread.sleep	Thread.wait
If you call wait method without synchronization, it will throw IllegalMonitorStateException in Java.	There is no requirement of synchronization for calling sleep method, you can call it normally.
42. Inerface and Abstract class. difference?
Interface	Abstract Class
It is not declare constructors or destructors	Abstract Class Can declare constructors and destructors
Having only one abstract class	Can implement several interfaces
43. Why interface than abstract class
Interface is for contract behavior at the same time abstract class is an default behavior in an subclasses.

44. How will you manage build?
45. What is the purpose of using Maven?
Support for managing the full lifecycle of a test project.
On the other hand, to define project structure, dependencies, build, and test management.
Most importantly, automatically downloads the necessary files from the repository while building the project.
46. I am facing an error says ‘Fast forward’ while pusing my code to server in Github. How to resolve it/
47. How will you push your code to server in github?
48. How will you handle popups?

    Syntax of handle the popups:
    
    String mainPage = driver.getWindowHandle();
     Alert alt = driver.switchTo().alert(); // to move control to alert popup
     alt.accept(); // to click on ok.
     alt.dismiss(); // to click on cancel.
    
     //Then move the control back to main web page-
     driver.switchTo().window(mainPage); → to switch back to main page.
    String mainPage = driver.getWindowHandle();
     Alert alt = driver.switchTo().alert(); // to move control to alert popup
     alt.accept(); // to click on ok.
     alt.dismiss(); // to click on cancel.
     //Then move the control back to main web page-
     driver.switchTo().window(mainPage); → to switch back to main page.
    
49. How will you run a machine in grid?
Below two steps are used to run a machine in grid,

Start the HUB
Start the NODE
----------------------------------------------------------------
For a QA Engineer, the questions are likely to focus on testing methodologies, tools, and scenarios. Here are some examples of the types of questions you might encounter in such a task:

1. General QA Concepts:

What is the difference between functional and non-functional testing?

Explain the software testing life cycle (STLC).

What are test cases, and how do you write them?

What is a test plan, and what elements should it include?

Define the difference between verification and validation.


2. Automation Testing:

What are the advantages of automation testing over manual testing?

What is the role of Selenium/WebDriver in automation testing?

Explain the Page Object Model (POM) and its advantages.

Write a sample automation script for login validation.

Describe a challenging scenario you automated and how you solved it.


3. GraphQL Related:

How would you test a GraphQL API?

What are common GraphQL errors, and how do you handle them in tests?

What are the key differences between testing a REST API and a GraphQL API?

How would you test nested queries in GraphQL?


4. SQL Related:

Write a query to find duplicate records in a table.

How would you validate data integrity between the front end and the database?

What is the difference between JOIN and UNION in SQL?

Explain how you would test stored procedures and triggers.


5. Docker Related:

How would you create a Docker container for running your automation tests?

What are the key Docker commands used in setting up test environments?

How do you integrate Docker with CI/CD pipelines?

Explain the process of debugging a Docker container.


6. Web and UI Testing:

What is cross-browser testing, and why is it important?

How would you approach testing a responsive web design?

Describe the process of identifying and reporting visual bugs.

What tools do you use for UI testing, and why?


7. Linux Commands:

Which Linux commands are used to check server logs?

How would you kill a running process in Linux?

What is the command to check disk usage and memory usage in Linux?

How do you set file permissions in Linux?


8. QA Scenarios and Practical Tasks:

Write a set of test cases for a login functionality.

How would you test a file upload feature in a web application?

Create a strategy for testing a REST API.

How would you handle a situation where a high-priority defect is found during a release?-
--------------------------------------------------------------------------------------
Incedo interview questions 
What is TDD and BDD
Bug fixed at day 10 what will you do
Day to day activities 
What is cucumber keywords
What is cucumber options
What is primary key and foreign key
What are the methods using in select class and explain
What are the methods using in Window handling and explain
Explain about robot class
Explain about frames
Explain about Oops concept
Explain about api
What is difference between client server and api server
-----------------------------------------------------
CTS interview questions 
Self intro
Explain about waits
Whats is functional testing
Write a Runner class annotation in cucumber
Diffrence between @Before hooks class and Background keyword
Write a javascript syntax using click method
Difference between query parameter and path parameter
Write a program print descending in array
What is Sendkey return type
-------------------------------------
Acces technology interview questions
Self intro
What is retrospective meeting
What are the git commands
Which command are you using push the code one branch to another branch in git
Explain about Api
Whats is beartoken and oautth token
Postman tool without any information stored in DB how can you handle and update data in put method
Can you explain how will you calculate the story points
Explain about jenkins
What are all the commands used in your projects while using git
Explain about cucumber framework
How to run passed and failed test cases in cucumber
Which tool you have using in Api automation
Which tool you have using in Api manual
Explain about bug life cycle
What are the dependency are used in your cucumber framework
What are the activities have you done on this day story picking and sprint planning
What are the defeating tool have used in your current project
What is sprint grooming?

------------------------------------------------------------------------
TCS interview questions : 

1st level - write entire programs 

1.Possible combinations 
String a="abc";
Out put :
a
b
c
ab
bc
ac
abc

2.Print non repeative no in array
3.Asending array value less second value 
4.Write Palindrome program
5.Write Factorial program
6.Reverse the string 

2nd level
1.Tell about your self
2.Explain your project framework 
3.Tell about locators 
4.How do you handle drop-down elements and explain the code
5.What is wait and explain explicit wait code
6.How do you drag and drop 
7.What is POM
8.Tell about maven
9.How did you use oops concept in your project 
10.Take xpath
-----------------------------------------------------------
iOPEX Technologies

1st Assessment
1.Write a program to select a value from a dropdown list.
2. Write a program to handle a JavaScript alert.
3. Write a program to perform a drag and drop operation.
4. Write a program to take a screenshot of a web page.
2nd Assessment
1.Tell about yourself
2.Explain projects framework
3.What is Quality Assurance
4.What is regression testing ?
5. What is exploratory testing- Explain with real time scenarios.
6. Difference between smoke and sanity testing.
7. What is end to end testing?
8.Explain maven project 
9.How do you handle file uploads in Selenium?
10. What are some common exceptions in Selenium WebDriver?
-----------------------------------------------------
TCS First round -1
--------------------------
1.What is oops?
2.What is abstraction? 
3.Explain stale element exception
4.Explain frame and syntax
5.Explain your project and framework
6.Explain api
7.Explain static?
8.Scenario and Scenario outline uses
9.Use of background keyword?
10.different types of API? 
11.what is method overriding? How to achieve it in your project? 
12.tools for API automation testing?
13.how you will give story points?
14.how will you handle frame? 
15.what is fluent wait? 
16.Explain about Jenkins?
17.how to create a built in Jenkins?
18.Explain your framework?

TCS Second round -2
-----------------------------
1.Difference between product backlog and sprint backlog. 
2.How do we use Variable and class which is same in another class in java .
3.API postman tool extensions
4.How do we use code in API postman tool for taking results.
5.Oops concept .
6.Selenium latest software version .
7.Are you learning any new tool
8.Which tool are you using for raising bugs.
--------------------------------------------
Explain about your project and experience
Explain about your project stracture
Roles and Responsibilities
what framework using in your project explain it detail
Test data's where you maintain
oops concepts  where you  applied
what challenge you faced
are you in part of regression or script writing
Explain-Jenkins-Continuous integration
method overloading
reverse string
Xpath 
Testng order of execution
----------------------------------------
Cognizant:
-------------
1.Self introduction
2.Why did you leave your previous job?
3.Framework explanation
4.Swap two variable without using 3rd variable
5.Write a code for Palindrome
6.How to takesscreenshot?
7.What is chaining in rest assured?
8.What is an api header?
9.How you cover end to end api testing?
10.How to handle switch windows in selenium
---------------------------------------------
Capgemini 

Tell me  about yourself
explain oops concept
reverse the string
What are the exceptions u r handled
diff bet nosuchelementexception and stale element
how will u handle windows
write implicit and explicit wait
annotations in testNG
Groups before and After in TestNG
Explain cucumber framework
cucumber options
Roles and  responsibilities Explain collection concept
---------------------------------------------------
How you will be using the constructor in selenium
 What are the locators that is available in selenium
Reverse the string
Api status code
What is the use of patch code in api
 What is the purpose of get in api
What  post method will do  in api
How you will handle the windows in selenium
Explain the step defination in cucumber
Write a code on selenium to launch the browser
Explain this keyword
 Have you done estimatation on your project
 On cucumber where you will store the xpath
On where you will be adding the dependencies in cucumber
Navigations in TestNG
How you will handle the dropdown in selenium
 Have you developed any frameworks
-----------------------------------------------
Cts interview questions:
Tell about yourself?
Explain about your project?
Have you been worked in fresh project or ongoing project?
How you will handle fresh project have been given to and what are the steps you will follow?
What is git hub?
What are the steps you follow in manual testing?
What is bug life cycle and how you will handle a bug in your project?
What is rest assured?
What is API?
what is sql?
Give some query command line from sql?
Reverse a string?
How to select two or more option from drop down by using selenium?
Explain about your call discussion?
Explain about retro meeting?
Write xpath syntax?
Explain about day to day activities?